import org.yaml.snakeyaml.Yaml

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
  }
}

apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-spring"

repositories {
  mavenCentral()
  jcenter()
  maven { url "https://spinnaker-releases.bintray.com/jars" }
}

sourceSets {
  main {
    java { srcDirs = ['src/main/java'] }
  }
}

spinnakerPlugin {
  serviceName = "front50"
  pluginClass = "com.opsmx.plugin.stage.custom.StaticPolicyPlugin"
  requires="front50>=0.0.0"
}
configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
  compileOnly "org.pf4j:pf4j:${pf4jVersion}"
  compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  compileOnly "com.netflix.spinnaker.kork:kork-plugins-api:${korkVersion}"
  compileOnly 'com.netflix.spinnaker.kork:kork-web:7.105.0'
  kapt "org.pf4j:pf4j:${pf4jVersion}"

  compileOnly group: 'com.squareup.retrofit', name: 'retrofit', version: '1.9.0'
  compileOnly group: 'com.squareup.retrofit', name: 'converter-jackson', version: '1.9.0'
  compileOnly group: 'com.jakewharton.retrofit', name: 'retrofit1-okhttp3-client', version: '1.1.0'
  implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'

   /*testImplementation "com.netflix.spinnaker.kork:kork-plugins-tck"
  testImplementation(platform("io.spinnaker.front50:front50-bom:2.24.0"))

  testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
  testImplementation "io.strikt:strikt-core:0.22.1"
  testImplementation "dev.minutest:minutest:1.10.0"
  testImplementation "io.mockk:mockk:1.9.3"
  testImplementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.1"
  testImplementation "javax.servlet:javax.servlet-api:4.0.1"*/

  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.0"
  testRuntime "org.junit.platform:junit-platform-launcher:1.4.0"
  testRuntime "org.junit.platform:junit-platform-commons:1.5.2"
  implementation("org.apache.commons:commons-lang3:3.0")
  
  implementation 'com.google.code.gson:gson:2.8.8'
  extraLibs group: 'com.netflix.spinnaker.front50', name: 'front50-core', version: '2.23.0'
  configurations.compile.extendsFrom(configurations.extraLibs)
}

jar {
    from {
            configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
        }
}

tasks.withType(Test) {
  useJUnitPlatform()
}
